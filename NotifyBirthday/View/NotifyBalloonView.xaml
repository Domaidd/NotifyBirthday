<Window
    x:Class="NotifyBirthday.NotifyBalloonView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="NotifyBalloonView"
    Width="240"
    Height="90"
    AllowsTransparency="True"
    Background="Transparent"
    ResizeMode="NoResize"
    ShowInTaskbar="False"
    Topmost="True"
    WindowStyle="None">
    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                            Margin="2"
                            SnapsToDevicePixels="true"
                            Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                            StrokeDashArray="1 2"
                            StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD" />
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

        <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
              </Trigger>-->
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                                <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30" />
    </WindowChrome.WindowChrome>
    <Grid>
        <Border
            Width="Auto"
            Height="Auto"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderThickness="3,3,3,3"
            CornerRadius="6,6,6,6">
            <Border.Background>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="#FFFFD283" />
                    <GradientStop Offset="1" Color="#FFFFFFFF" />
                </LinearGradientBrush>
            </Border.Background>
        </Border>
        <Grid Height="35" VerticalAlignment="Top">
            <StackPanel
                Margin="10,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                WindowChrome.IsHitTestVisibleInChrome="True">
                <TextBlock
                    Width="100"
                    VerticalAlignment="Top"
                    FontSize="16"
                    FontWeight="DemiBold"
                    Foreground="#FF575757"
                    Text="Оповещение"
                    TextWrapping="Wrap" />
            </StackPanel>
            <StackPanel
                Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                WindowChrome.IsHitTestVisibleInChrome="True">
                <Button
                    Width="15"
                    Height="15"
                    Margin="5"
                    Command="{Binding CloseBalloon}"
                    Style="{DynamicResource DefaultButtonStyle}">
                    <Button.OpacityMask>
                        <ImageBrush ImageSource="/NotifyBirthday;component/Close.png" />
                    </Button.OpacityMask>
                    <Button.Background>
                        <ImageBrush ImageSource="/NotifyBirthday;component/Close.png" />
                    </Button.Background>
                    <Button.Foreground>
                        <ImageBrush />
                    </Button.Foreground>
                    <Button.BorderBrush>
                        <ImageBrush />
                    </Button.BorderBrush>
                </Button>
            </StackPanel>
        </Grid>
        <Grid Margin="10,35,10,10">
            <TextBlock
                x:Name="textblock"
                Height="45"
                VerticalAlignment="Top"
                FontSize="12"
                FontWeight="DemiBold"
                Foreground="#FF575757"
                Text="{Binding NotifyText}"
                TextWrapping="Wrap" />
        </Grid>
    </Grid>
</Window>
